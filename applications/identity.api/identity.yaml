---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: identity-api-deployment
  labels:
    app: identity-api
  namespace: project
spec:
  replicas: 1
  selector:
    matchLabels:
      app: identity-api
  template:
    metadata:
      labels:
        app: identity-api
    spec:
      containers:
        - image: developpementgroupe99cr.azurecr.io/identity-api:base
          env:
            - name: RedisHost
              value: "user-data-redis-svc.database.svc.cluster.local:6379"
          resources:
            requests:
              memory: "128Mi"
              cpu: "128m"
            limits:
              memory: "256Mi"
              cpu: "256m"
          imagePullPolicy: Always
          name: identity-api
          ports:
            - containerPort: 80
      imagePullSecrets:
        - name: acr-secret
      restartPolicy: Always

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: identity-api-svc
    namespace: project
  name: identity-api-svc
spec:
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  selector:
    app: identity-api

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: identity-api-netpol-allow-communication-with-web
  namespace: project
spec:
  podSelector:
    matchLabels:
      app: identity-api
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              role: project
        - podSelector:
            matchLabels:
              app: web
      ports:
        - protocol: TCP
          port: 80
  egress:
    - to:
        - namespaceSelector:
            matchLabels:
              role: project
        - podSelector:
            matchLabels:
              app: web
      ports:
        - protocol: TCP
          port: 80
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: identity-api-netpol-allow-communication-with-user-data
  namespace: project
spec:
  podSelector:
    matchLabels:
      app: identity-api
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              role: database
        - podSelector:
            matchLabels:
              app: user-data-redis
      ports:
        - protocol: TCP
          port: 80
  egress:
    - to:
        - namespaceSelector:
            matchLabels:
              role: database
        - podSelector:
            matchLabels:
              app: user-data-redis
      ports:
        - protocol: TCP
          port: 6379
