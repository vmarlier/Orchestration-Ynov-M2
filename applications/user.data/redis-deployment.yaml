---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: user-data-netpol-allow-communication-with-identity-api
  namespace: database
spec:
  podSelector:
    matchLabels:
      app: user-data-redis
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              role: project
        - podSelector:
            matchLabels:
              app: identity-api
      ports:
        - protocol: TCP
          port: 6379
  egress:
    - to:
        - namespaceSelector:
            matchLabels:
              role: project
        - podSelector:
            matchLabels:
              app: identity-api
      ports:
        - protocol: TCP
          port: 80
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: user-data-redis
  name: user-data-redis-svc
  namespace: database
spec:
  ports:
    - protocol: TCP
      port: 6379
      targetPort: 6379
  selector:
    app: user-data-redis

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: user-data-redis
  name: user-data-redis
  namespace: database
spec:
  replicas: 1
  selector:
    matchLabels:
      app: user-data-redis
  template:
    metadata:
      labels:
        app: user-data-redis
    spec:
      containers:
        - env:
            - name: ALLOW_EMPTY_PASSWORD
              value: "yes"
          image: redis
          imagePullPolicy: Always
          name: user-data-redis
          ports:
            - containerPort: 6379
          volumeMounts:
            - mountPath: /data
              name: redis-data
      restartPolicy: Always
      volumes:
        - name: redis-data
          persistentVolumeClaim:
            claimName: redis-data

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: redis-data
  name: redis-data
  namespace: database
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 300Mi
